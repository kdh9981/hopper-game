{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kdh99\\\\hopper-game\\\\src\\\\components\\\\HopperGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport { WalletMultiButton } from '@solana/wallet-adapter-react-ui';\nimport { saveUserProgress, loadUserProgress, fetchLeaderboardData } from '../utils/api';\nimport './HopperGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HopperGame = () => {\n  _s();\n  const {\n    publicKey\n  } = useWallet();\n  const [totalHops, setTotalHops] = useState(0);\n  const [pointsPerJump, setPointsPerJump] = useState(1);\n  const [leaderboardData, setLeaderboardData] = useState([]);\n  const walletAddress = publicKey ? publicKey.toBase58() : null;\n  useEffect(() => {\n    if (walletAddress) {\n      loadUserProgress(walletAddress).then(progress => {\n        if (progress) {\n          setTotalHops(progress.totalHops || 0);\n          setPointsPerJump(progress.pointsPerJump || 1);\n        } else {\n          // Reset state for new wallet\n          setTotalHops(0);\n          setPointsPerJump(1);\n        }\n      }).catch(console.error);\n    } else {\n      // Reset state when wallet disconnects\n      setTotalHops(0);\n      setPointsPerJump(1);\n    }\n  }, [walletAddress]);\n  useEffect(() => {\n    const fetchLeaderboard = () => {\n      fetchLeaderboardData().then(setLeaderboardData).catch(console.error);\n    };\n    fetchLeaderboard();\n    const intervalId = setInterval(fetchLeaderboard, 5000); // Update every 5 seconds\n\n    return () => clearInterval(intervalId);\n  }, []);\n  const handleJump = () => {\n    const newTotalHops = totalHops + pointsPerJump;\n    console.log('New total hops:', newTotalHops);\n    setTotalHops(newTotalHops);\n    if (walletAddress) {\n      console.log('Saving progress for wallet:', walletAddress);\n      saveUserProgress(walletAddress, {\n        totalHops: newTotalHops,\n        pointsPerJump\n      }).then(() => {\n        console.log('Progress saved, fetching new leaderboard');\n        return fetchLeaderboardData();\n      }).then(newLeaderboardData => {\n        console.log('New leaderboard data:', newLeaderboardData);\n        setLeaderboardData(newLeaderboardData);\n      }).catch(console.error);\n    }\n    const rabbit = document.querySelector('.rabbit');\n    rabbit.classList.add('hop');\n    setTimeout(() => rabbit.classList.remove('hop'), 500);\n  };\n  const testBackendConnection = async () => {\n    try {\n      const response = await fetchLeaderboardData();\n      setLeaderboardData(response); // Update leaderboard with fetched data\n      console.log('Backend connection successful:', response);\n      alert('Backend connection successful! Check console for details.');\n    } catch (error) {\n      console.error('Backend connection failed:', error);\n      alert('Backend connection failed. Check console for details.');\n    }\n  };\n  const shortenAddress = address => {\n    return `${address.slice(0, 4)}...${address.slice(-4)}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hop into the Future!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"moon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rabbit\",\n        onClick: handleJump\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wallet-section\",\n        children: [/*#__PURE__*/_jsxDEV(WalletMultiButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), walletAddress && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total Hops: \", totalHops]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Hops per Jump: \", pointsPerJump]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"leaderboard\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Top 10 Hoppers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: leaderboardData.map((entry, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"leaderboard-entry\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"rank\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"wallet-address\",\n              children: shortenAddress(entry.walletAddress)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"hop-count\",\n              children: [entry.totalHops || 0, \" Hops\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"test-button\",\n        onClick: testBackendConnection,\n        children: \"Test Backend Connection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(HopperGame, \"OSRUBovWP+58VEaiELTStOq4oVY=\", false, function () {\n  return [useWallet];\n});\n_c = HopperGame;\nexport default HopperGame;\nvar _c;\n$RefreshReg$(_c, \"HopperGame\");","map":{"version":3,"names":["React","useState","useEffect","useWallet","WalletMultiButton","saveUserProgress","loadUserProgress","fetchLeaderboardData","jsxDEV","_jsxDEV","HopperGame","_s","publicKey","totalHops","setTotalHops","pointsPerJump","setPointsPerJump","leaderboardData","setLeaderboardData","walletAddress","toBase58","then","progress","catch","console","error","fetchLeaderboard","intervalId","setInterval","clearInterval","handleJump","newTotalHops","log","newLeaderboardData","rabbit","document","querySelector","classList","add","setTimeout","remove","testBackendConnection","response","alert","shortenAddress","address","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","entry","index","_c","$RefreshReg$"],"sources":["C:/Users/kdh99/hopper-game/src/components/HopperGame.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useWallet } from '@solana/wallet-adapter-react';\r\nimport { WalletMultiButton } from '@solana/wallet-adapter-react-ui';\r\nimport { saveUserProgress, loadUserProgress, fetchLeaderboardData } from '../utils/api';\r\nimport './HopperGame.css';\r\n\r\nconst HopperGame = () => {\r\n  const { publicKey } = useWallet();\r\n  const [totalHops, setTotalHops] = useState(0);\r\n  const [pointsPerJump, setPointsPerJump] = useState(1);\r\n  const [leaderboardData, setLeaderboardData] = useState([]);\r\n  const walletAddress = publicKey ? publicKey.toBase58() : null;\r\n\r\n  useEffect(() => {\r\n    if (walletAddress) {\r\n      loadUserProgress(walletAddress)\r\n        .then(progress => {\r\n          if (progress) {\r\n            setTotalHops(progress.totalHops || 0);\r\n            setPointsPerJump(progress.pointsPerJump || 1);\r\n          } else {\r\n            // Reset state for new wallet\r\n            setTotalHops(0);\r\n            setPointsPerJump(1);\r\n          }\r\n        })\r\n        .catch(console.error);\r\n    } else {\r\n      // Reset state when wallet disconnects\r\n      setTotalHops(0);\r\n      setPointsPerJump(1);\r\n    }\r\n  }, [walletAddress]);\r\n\r\n  useEffect(() => {\r\n    const fetchLeaderboard = () => {\r\n      fetchLeaderboardData()\r\n        .then(setLeaderboardData)\r\n        .catch(console.error);\r\n    };\r\n  \r\n    fetchLeaderboard();\r\n    const intervalId = setInterval(fetchLeaderboard, 5000); // Update every 5 seconds\r\n  \r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  const handleJump = () => {\r\n    const newTotalHops = totalHops + pointsPerJump;\r\n    console.log('New total hops:', newTotalHops);\r\n    setTotalHops(newTotalHops);\r\n    if (walletAddress) {\r\n      console.log('Saving progress for wallet:', walletAddress);\r\n      saveUserProgress(walletAddress, { totalHops: newTotalHops, pointsPerJump })\r\n        .then(() => {\r\n          console.log('Progress saved, fetching new leaderboard');\r\n          return fetchLeaderboardData();\r\n        })\r\n        .then(newLeaderboardData => {\r\n          console.log('New leaderboard data:', newLeaderboardData);\r\n          setLeaderboardData(newLeaderboardData);\r\n        })\r\n        .catch(console.error);\r\n    }\r\n    const rabbit = document.querySelector('.rabbit');\r\n    rabbit.classList.add('hop');\r\n    setTimeout(() => rabbit.classList.remove('hop'), 500);\r\n  };\r\n\r\n  const testBackendConnection = async () => {\r\n    try {\r\n      const response = await fetchLeaderboardData();\r\n      setLeaderboardData(response); // Update leaderboard with fetched data\r\n      console.log('Backend connection successful:', response);\r\n      alert('Backend connection successful! Check console for details.');\r\n    } catch (error) {\r\n      console.error('Backend connection failed:', error);\r\n      alert('Backend connection failed. Check console for details.');\r\n    }\r\n  };\r\n\r\n  const shortenAddress = (address) => {\r\n    return `${address.slice(0, 4)}...${address.slice(-4)}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"game-container\">\r\n      <div className=\"game-area\">\r\n        <h1>Hop into the Future!</h1>\r\n        <div className=\"moon\"></div>\r\n        <div className=\"rabbit\" onClick={handleJump}></div>\r\n      </div>\r\n      <div className=\"sidebar\">\r\n        <div className=\"wallet-section\">\r\n          <WalletMultiButton />\r\n          {walletAddress && (\r\n            <div>\r\n              <p>Total Hops: {totalHops}</p>\r\n              <p>Hops per Jump: {pointsPerJump}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"leaderboard\">\r\n          <h2>Top 10 Hoppers</h2>\r\n          <ul>\r\n            {leaderboardData.map((entry, index) => (\r\n              <li key={index} className=\"leaderboard-entry\">\r\n                <span className=\"rank\">{index + 1}</span>\r\n                <span className=\"wallet-address\">{shortenAddress(entry.walletAddress)}</span>\r\n                <span className=\"hop-count\">{entry.totalHops || 0} Hops</span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <button className=\"test-button\" onClick={testBackendConnection}>Test Backend Connection</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HopperGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}