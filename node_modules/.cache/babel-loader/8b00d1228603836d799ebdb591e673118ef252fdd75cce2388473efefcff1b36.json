{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:3001/api'; // We'll set up the backend later\n\nexport const saveUserProgress = async (walletAddress, data) => {\n  console.log('Saving progress for wallet:', walletAddress, 'Data:', data);\n  const response = await fetch(`${API_URL}/save-progress`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      walletAddress,\n      data\n    })\n  });\n  if (!response.ok) {\n    throw new Error('Failed to save progress');\n  }\n  return response.json();\n};\nexport const loadUserProgress = async walletAddress => {\n  console.log('Loading progress for wallet:', walletAddress);\n  const response = await fetch(`${API_URL}/load-progress/${walletAddress}`);\n  if (!response.ok) {\n    throw new Error('Failed to load progress');\n  }\n  return response.json();\n};\nexport const fetchLeaderboardData = async () => {\n  console.log('Fetching leaderboard data');\n  const response = await fetch(`${API_URL}/leaderboard`);\n  if (!response.ok) {\n    throw new Error('Failed to fetch leaderboard data');\n  }\n  return response.json();\n};","map":{"version":3,"names":["axios","API_URL","saveUserProgress","walletAddress","data","console","log","response","fetch","method","headers","body","JSON","stringify","ok","Error","json","loadUserProgress","fetchLeaderboardData"],"sources":["C:/Users/kdh99/hopper-game/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:3001/api'; // We'll set up the backend later\r\n\r\nexport const saveUserProgress = async (walletAddress, data) => {\r\n  console.log('Saving progress for wallet:', walletAddress, 'Data:', data);\r\n  const response = await fetch(`${API_URL}/save-progress`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({ walletAddress, data })\r\n  });\r\n  if (!response.ok) {\r\n    throw new Error('Failed to save progress');\r\n  }\r\n  return response.json();\r\n};\r\n\r\nexport const loadUserProgress = async (walletAddress) => {\r\n  console.log('Loading progress for wallet:', walletAddress);\r\n  const response = await fetch(`${API_URL}/load-progress/${walletAddress}`);\r\n  if (!response.ok) {\r\n    throw new Error('Failed to load progress');\r\n  }\r\n  return response.json();\r\n};\r\n\r\nexport const fetchLeaderboardData = async () => {\r\n  console.log('Fetching leaderboard data');\r\n  const response = await fetch(`${API_URL}/leaderboard`);\r\n  if (!response.ok) {\r\n    throw new Error('Failed to fetch leaderboard data');\r\n  }\r\n  return response.json();\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B,CAAC,CAAC;;AAE7C,OAAO,MAAMC,gBAAgB,GAAG,MAAAA,CAAOC,aAAa,EAAEC,IAAI,KAAK;EAC7DC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEH,aAAa,EAAE,OAAO,EAAEC,IAAI,CAAC;EACxE,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGP,OAAO,gBAAgB,EAAE;IACvDQ,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEV,aAAa;MAAEC;IAAK,CAAC;EAC9C,CAAC,CAAC;EACF,IAAI,CAACG,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EACA,OAAOR,QAAQ,CAACS,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAG,MAAOd,aAAa,IAAK;EACvDE,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEH,aAAa,CAAC;EAC1D,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGP,OAAO,kBAAkBE,aAAa,EAAE,CAAC;EACzE,IAAI,CAACI,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EACA,OAAOR,QAAQ,CAACS,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAME,oBAAoB,GAAG,MAAAA,CAAA,KAAY;EAC9Cb,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;EACxC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGP,OAAO,cAAc,CAAC;EACtD,IAAI,CAACM,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,kCAAkC,CAAC;EACrD;EACA,OAAOR,QAAQ,CAACS,IAAI,CAAC,CAAC;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}